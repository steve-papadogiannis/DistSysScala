@startuml
skinparam sequenceArrowThickness 2
skinparam roundcorner 20

participant "Client Application" as Client
actor User
box Service [directions-map-reduce-actor-system]
boundary Main
control Route
control RequestHandler <<Actor>>
control Supervisor <<Actor>>
control Server <<Actor>>
control Master <<Actor>>
control ReducersGroup <<Actor>>
control MappersGroup <<Actor>>
control MappersGroupQuery <<Actor>>
control ReducersGroupQuery <<Actor>>
control ReducerWorker <<Actor>>
control MapperWorker <<Actor>>
control MemCache <<Actor>>
control "Google Directions API Actor"  as GDAA <<Actor>>
control MongoActor <<Actor>>
end box
database Mongo
boundary "Google Directions API" as GDA

autonumber "<b>[000]"

== Initialization ==

User -> Main : Initializes System
activate Main

Main -> Supervisor : Creates actor
activate Supervisor
Main -> Supervisor : Sends "CreateInfrastructure" message

Supervisor -> Server : Creates actor
activate Server
Supervisor -> Server : Sends "CreateInfrastructure" message

Server -> Master : Creates actor
activate Master
Server -> Master : Sends "CreateInfrastructure" message

Master -> MemCache : Creates actor
activate MemCache

Master -> GDAA : Creates actor
activate GDAA

Master -> MongoActor : Creates actor
activate MongoActor

Master -> ReducersGroup : Creates actor
activate ReducersGroup
Master -> ReducersGroup : Sends "RequestTrackReducer" message

ReducersGroup -> ReducersGroup : Checks if ReducerWorker with given name exists

opt false
ReducersGroup -> ReducerWorker : Creates actor
activate ReducerWorker
end

ReducersGroup -> ReducerWorker : Sends "RequestTrackReducer" message

ReducerWorker --> ReducersGroup : Sends "ReducerRegistered" message

Master -> MappersGroup : Creates actor
activate MappersGroup
Master -> MappersGroup : Sends "RequestTrackMapper" message

MappersGroup -> MappersGroup : Checks if MapperWorker with given name exists

opt false
MappersGroup -> MapperWorker : Creates actor
activate MapperWorker
end

MappersGroup -> MapperWorker : Sends "RequestTrackMapper" message

MapperWorker --> MappersGroup : Sends "MapperRegistered" signal

Main -> Route : Initializes Route
activate Route

== Runtime ==

Client -> Route : Invokes "getDirections" endpoint

Route -> RequestHandler : Creates actor
activate RequestHandler
Route -> RequestHandler : Sends request

RequestHandler -> Supervisor : Sends "CalculateDirections" signal

Supervisor -> Server : Forwards request

Server -> Master : Forwards request

Master -> MemCache : Performs cache check for request

alt cache hit

MemCache -> Master : Returns cached result

Master -> RequestHandler : Returns cached result

RequestHandler -> Client : Returns cached result

else cache miss

MemCache -> Master : Returns cache miss message

Master -> MappersGroup : Forwards request

MappersGroup -> MappersGroupQuery : Creates actor
activate MappersGroupQuery

MappersGroup -> MappersGroupQuery : Forwards request

MappersGroupQuery -> MapperWorker : Forwards request

alt MapperWorker responds with result

MapperWorker -> MongoActor : Find all stored results matching mapper hash

MongoActor -> Mongo : Find all stored results matching mapper hash

Mongo --> MongoActor : Returns matching results

MongoActor -> MapperWorker : Returns matching results

MapperWorker -> MappersGroupQuery : Sends map result

MappersGroupQuery -> MappersGroupQuery : Stops self

else MapperWorker terminates

MapperWorker -> MappersGroupQuery : Sends "Terminated" signal

MappersGroupQuery -> MappersGroupQuery : Stops self

else Responses collection times out

MappersGroupQuery -> MappersGroupQuery : Stops self

end

MappersGroupQuery -> Master : Sends "RespondAllMapResults" message
deactivate MappersGroupQuery

Master -> ReducersGroup : Sends "CalculateReduction" message

ReducersGroup -> ReducersGroupQuery : Creates actor
activate ReducersGroupQuery

ReducersGroupQuery -> ReducerWorker : Forwards request

alt ReducerWorker responds with result

ReducerWorker -> ReducersGroupQuery : Sends reduce result

ReducersGroupQuery -> ReducersGroupQuery : Stops self

else ReducerWorker terminates

ReducerWorker -> ReducersGroupQuery : Sends "Terminated" signal

ReducersGroupQuery -> ReducersGroupQuery : Stops self

else Responses collection times out


ReducersGroupQuery -> ReducersGroupQuery : Stops self

end

ReducersGroupQuery -> Master : Sends "RespondAllReduceResults" message
deactivate ReducersGroupQuery

Master -> Master : Calculates euclidean minimum

alt No result

Master -> GDAA : Invokes actor to get results from Google Directions API

GDAA -> GDA : Invokes Google Directions API for result

GDA -> GDAA : Gets result

GDAA -> Master : Returns result

Master -> MemCache : Updates the cache with the result

Master -> MongoActor : Updates the db with the result

MongoActor -> Mongo : Updates the db with the result

else Result

Master -> MemCache : Updates cache with the result

end

Master -> RequestHandler : Sends result

RequestHandler -> Client : Sends result
deactivate RequestHandler

end

== Shutdown ==

User -> Main : Submits any input

Main -> Route : Terminates Route
deactivate Route

Main -> Main : Terminates Actor System

Main -> Supervisor : Terminates Supervisor

Supervisor -> Server : Terminates Server

Server -> Master : Terminates Master

Master -> ReducersGroup : Terminates ReducersGroup

ReducersGroup -> ReducerWorker : Terminates ReducerWorker

Master -> MappersGroup : Terminates MappersGroup

MappersGroup -> MapperWorker : Terminates MapperWorker

deactivate ReducerWorker
deactivate MapperWorker
deactivate MappersGroup
deactivate ReducersGroup
deactivate Master
deactivate Server
deactivate Supervisor
deactivate Main

@enduml